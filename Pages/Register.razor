@page "/register/{eventName}"
@using System.ComponentModel.DataAnnotations
@inject CourseraBlazor.Services.UserSessionService UserSession

<PageTitle>Register</PageTitle>

@if (string.IsNullOrWhiteSpace(eventName) || !KnownEvents.Contains(eventName))
{
    <div class="alert alert-warning">
        <p>Event not found or invalid. <a href="/events">Return to event list</a>.</p>
    </div>
}
else
{
    <h1>Register for @eventName</h1>
    @if (!string.IsNullOrEmpty(SuccessMessage))
    {
        <div class="alert alert-success">@SuccessMessage</div>
    }
    <EditForm Model="registrationModel" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="mb-3">
            <label for="name">Name</label>
            <InputText id="name" class="form-control" @bind-Value="registrationModel.Name" />
            <ValidationMessage For="@(() => registrationModel.Name)" />
        </div>
        <div class="mb-3">
            <label for="email">Email</label>
            <InputText id="email" class="form-control" @bind-Value="registrationModel.Email" />
            <ValidationMessage For="@(() => registrationModel.Email)" />
        </div>
        <button type="submit" class="btn btn-primary">Register</button>
        <NavLink class="btn btn-secondary ms-2" href="/events">Back to Events</NavLink>
    </EditForm>
}

@code {
    [Parameter]
    public string? eventName { get; set; }

    private static readonly HashSet<string> KnownEvents = new()
    {
        "Tech Conference 2025",
        "Marketing Summit",
        "Startup Expo"
    };

    private RegistrationModel registrationModel = new();
    private string? SuccessMessage;

    public class RegistrationModel
    {
        [Required(ErrorMessage = "Name is required")]
        public string? Name { get; set; }

        [Required(ErrorMessage = "Email is required")]
        [EmailAddress(ErrorMessage = "Invalid email address")]
        public string? Email { get; set; }
    }

    private void HandleValidSubmit()
    {
        UserSession.Register(eventName!, registrationModel.Name!, registrationModel.Email!);
        SuccessMessage = $"Thank you, {registrationModel.Name}, for registering for {eventName}!";
        registrationModel = new();
    }
}
